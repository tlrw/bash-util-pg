#!/usr/bin/env bash

__DIR__="$(dirname -- "${BASH_SOURCE[0]}")"

if ! command -v pg_dump >/dev/null; then
    echo "no pg_dump" >&2

    exit 1
fi

SRC="$(dirname -- "${__DIR__}")/src"

source "${SRC}/pg/envs.bash" || {
    exit 1
}

main() {
    declare -A options
    declare -i quoteAllIdentifiers=1
    declare    dbName="${PGDATABASE:-}" file=""

    options["format"]="directory"

    while [[ $# -gt 0 ]]; do
        case $1 in
            --db)
                [[ -z "$2" ]] && echo "option --db requires argument: database name" >&2 && exit 1
                dbName="$2"
                shift 2
                ;;
            --no-quote-all-identifiers)
                quoteAllIdentifiers=0
                shift
                ;;
            -Fp | --format=plain)
                options["format"]="plain"
                shift
                ;;
            -Fc | --format=custom)
                options["format"]="custom"
                shift
                ;;
            -Fd | --format=directory)
                options["format"]="directory"
                shift
                ;;
            -Ft | --format=tar)
                options["format"]="tar"
                shift
                ;;
            -F | --format)
                ! [[ "$2" =~ ^(plain|p|custom|c|directory|d|tar|t)$ ]] && echo "invalid format: $2" >&2 && exit 1
                options["format"]="$2"
                shift
                ;;
            -f | --file)
                [[ -z "$2" ]] && echo "option --file requires argument: path" >&2 && exit 1
                file="$2"
                shift 2
                ;;
            *)
                echo "invalid argument: $1" && exit 1
                ;;
        esac
    done

    if [[ -z "${dbName}" ]]; then
        echo "no database name" >&2

        exit 1
    fi

    if [[ ${quoteAllIdentifiers} -eq 1 ]]; then
        options["quote-all-identifiers"]=""
    fi

    declare -a cmdOptions=()

    if [[ -z "${file}" ]]; then
        file="${POSTGRES_PGBACKUPS_DIR:-${PWD}}/$(date +"%Y/%m/%e-${dbName}-%H%M-%S.pgdump")"

        case "${options['format']}" in
            p | plain)
                file+=".sql"
                ;;
            t | tar)
                file+=".tar"
                ;;
        esac
    fi

    cmdOptions+=("--file" "${file}")

    declare optName optValue

    for optName in "${!options[@]}"; do
        optValue="${options[${optName}]}"

        cmdOptions+=("--${optName}")

        if [[ -n ${optValue} ]]; then
            cmdOptions+=("${optValue}")
        fi
    done

    declare outputDir

    outputDir="$(dirname "${file}")"

    if ! [[ -d "${outputDir}" ]]; then
        mkdir -p "${outputDir}"
    fi

    pg_dump "${cmdOptions[@]}" "${dbName}"
}

main "$@"
